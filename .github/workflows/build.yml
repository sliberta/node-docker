# This is a basic workflow to help you get started with Actions

name: myNodeAppCI

env:
  MONGO_USER: ${{myNodeDockerEnvironment.MONGO_USER}}
  MONGO_PASSWORD: ${{myNodeDockerEnvironment.MONGO_PASSWORD}}
  SESSION_SECRET: ${{myNodeDockerEnvironment.SESSION_SECRET}}
  MONGO_INITDB_ROOT_USERNAME: ${{myNodeDockerEnvironment.MONGO_INITDB_ROOT_USERNAME}}
  MONGO_INITDB_ROOT_PASSWORD: ${{myNodeDockerEnvironment.MONGO_INITDB_ROOT_PASSWORD}}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # lucasalt/act_base allows us to run docker-compose
    container:
      image: lucasalt/act_base:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: "node-docker"

      - name: Build docker
        run: |
          echo ---- Stopping docker services ------------
          docker-compose -f ./node-docker/docker-compose.yml -f ./node-docker/docker-compose.prod.yml -p testing down
          echo --- Building and starting up docker -------
          docker-compose -f ./node-docker/docker-compose.yml -f ./node-docker/docker-compose.prod.yml -p testing up -d
          echo --- Containers up --------------------------
